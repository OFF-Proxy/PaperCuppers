「Gobb」サーバユニットの設計


・通信プロトコル
・通信シーケンス


※特記ない場合、「クライアント」および「サーバ」という表現は、ゲームアプリケーションレベルでの両者を指します。
すなわち、以下の意味で用いられます。
クライアント：ゲームクライアント（=クライアント側ゲームプログラム）
サーバ　　　：ゲームサーバ（=サーバ側ゲームプログラム）

また、「プレイヤー」はゲームに参加する利用者（ゲームクライアントを利用してゲームを行う"人"）を指します。


---- 通信プロトコルおよびアプリケーションデータの定義 ----


< 通信タイプ >

0x0-：クライアント通信（クライアントからの通信）
0x1-：サーバ通信（サーバからの通信）

※クライアント宛てのクライアント通信、サーバ宛てのサーバ通信は破棄（Drop）されます。


0x0-
・0x00：REQUEST_PARTICIPATION_APPROVAL ：ゲーム参加の承認要求
・0x01：REQUEST_COORDINATE_LIST        ：配置可能な座標のリストの要求（コマを持つ）
・0x02：REQUEST_PIECE_PLACEMENT        ：コマの配置要求

・0x03：ERROR_CLIENT                   ：クライアントエラー（切断通知など）


0x1-
・0x10：RESPONSE_PARTICIPATION_APPROVAL：ゲーム参加の承認応答
・0x11：RESPONSE_COORDINATE_LIST       ：コマを配置可能な座標のリストを返却

・0x12：INSTRUCT_GAME_START            ：ゲーム開始命令
・0x13：INSTRUCT_PIECE_PICKING         ：コマ取り上げ命令
・0x14：INSTRUCT_PIECE_PLACEMENT       ：コマ配置命令
・0x15：INSTRUCT_GAME_END              ：ゲーム終了命令 typeごと（リザルト表示へ）（対戦相手が通信を切断した）

・0x16：ERROR_GAME                     ：ゲームエラー通知 typeごと（エラーコード：コマを置ける場所がありません、不正なコマ配置要求です、など）
・0x17：ERROR_SERVER                   ：サーバエラー通知



※REQUESTで始まる通信タイプはREQUEST通信と呼ばれ、ある単独のクライアントからサーバへの要求通信を意味します。
　サーバからのREQUEST通信およびターンを獲得していないクライアントからの"REQUEST_COORDINATE_LIST", "REQUEST_PIECE_PLACEMENT"通信は破棄（Drop）されます。

※RESPONSEで始まる通信タイプはRESPONSE通信と呼ばれ、REQUEST通信への応答を意味します。
　クライアントからのRESPONSE通信は破棄（Drop）されます。

※INSTRUCTで始まる通信タイプはINSTRUCT通信と呼ばれ、サーバからゲームへ参加している全てのクライアントへの命令を意味します。
　クライアントからのINSTRUCT通信は破棄（Drop）されます。

※ERRORで始まる通信タイプの通信はERROR_INFORM通信と呼ばれ、クライアントまたはサーバからのエラー通知を意味します。
　サーバからの"ERROR_CLIENT"通信およびクライアントからの"ERROR_GAME", "ERROR_SERVER"通信は破棄（Drop）されます。




クライアント通信

0x00：REQUEST_PARTICIPATION_APPROVAL

"REQUEST_PARTICIPATION_APPROVAL"は、クライアントが自らのゲームへの参加を承認するよう、サーバへと要求を行うクライアント通信です。

@フォーマット
0                                                                             31
+------------+--------------------------+-------------------------------------+
|  type (8)  |  player_name_length (8)  |            player_name (8x)         |
+------------+--------------------------+                                     +
:                                                                             :
:                                                          +------------------+
:                                                          |   padding (8x)   |
+----------------------------------------------------------+------------------+

・type              ：8bit ：通信タイプ
・player_name_length：8bit ：プレイヤーの名前のバイト長
・player_name       ：8xbit：プレイヤーの名前。xバイトの可変長
・padding           ：8xbit：32ビットの整数倍にするための詰め物





0x01：REQUEST_COORDINATE_LIST

"REQUEST_COORDINATE_LIST"は、選択したコマを配置可能な座標のリストを返却するよう、サーバへと要求を行うクライアント通信です。

@フォーマット
0                                                                             31
+------------+----------------+------------------------+----------------------+
|  type (8)  |  piece_id (8)  |   coordinate_from (8)  |      padding (8)     |
+------------+----------------+------------------------+----------------------+

・type           ：8bit：通信タイプ
・piece_id       ：8bit：選択した駒が盤上のものである場合は0xffが、そうでない場合は駒IDが入ります。
・coordinate_from：8bit：選択した駒が盤上のものである場合はその駒の座標が、そうでない場合は0xffが入ります。
・padding        ：8bit：32ビットの整数倍にするための詰め物





0x02：REQUEST_PIECE_PLACEMENT

"REQUEST_PIECE_PLACEMENT"は、選択した座標に駒を配置するよう、サーバへと要求を行うクライアント通信です。

@フォーマット
0                                                                             31
+------------+----------------------+-----------------------------------------+
|  type (8)  |   coordinate_to (8)  |              padding (16)               |
+------------+----------------------+-----------------------------------------+

・type           ：8bit ：通信タイプ
・coordinate_to  ：8bit ：駒を配置する先の座標を指定します。
・padding        ：16bit：32ビットの整数倍にするための詰め物





0x03：ERROR_CLIENT

"ERROR_CLIENT"は、クライアント側で発生したエラーについてサーバへ通知を行うクライアント通信です。

@フォーマット
0                                                                             31
+------------+------------------+---------------------------------------------+
|  type (8)  |  error_type (8)  |                 padding (16)                |
+------------+------------------+---------------------------------------------+

・type      ：8bit ：通信タイプ
・error_type：8bit ：発生したエラーのタイプ
・padding   ：16bit：32ビットの整数倍にするための詰め物（別に無くてもいいけど、やってみたかっただけ）

@許可されるエラータイプ
・UNKNOWN_ERROR_CLIENT
・CLIENT_DISCONNECTED





サーバ通信

0x10：RESPONSE_PARTICIPATION_APPROVAL

"RESPONSE_PARTICIPATION_APPROVAL"は、"REQUEST_PARTICIPATION_APPROVAL"を承認する場合の応答となるサーバ通信です。

@フォーマット
0                                                                             31
+------------+-------------------+--------------------------------------------+
|  type (8)  |   player_id (8)   |               padding (16)                 |
+------------+-------------------+--------------------------------------------+

・type      ：8bit ：通信タイプ
・player_id ：8bit ：ゲーム内で一意になる、プレイヤーの識別子。1から始まる
・padding   ：16bit：32ビットの整数倍にするための詰め物（別に無くてもいいけど、やってみたかっただけ）





0x11：RESPONSE_COORDINATE_LIST

"RESPONSE_COORDINATE_LIST"は、"REQUEST_COORDINATE_LIST"の応答として、クライアントが選択した駒を配置可能な座標のリストを返すサーバ通信です。

@フォーマット
0                                                                             31
+------------+----------------+-----------------------------------------------+
|  type (8)  |    count (8)   |              coordinate_list (8x)             |
+------------+----------------+                                               +
:                                                                             :
:                                                          +------------------+
:                                                          |   padding (8x)   |
+----------------------------------------------------------+------------------+

・type           ：8bit ：通信タイプ
・count          ：8bit ：座標リストに含まれる座標の数
・coordinate_list：8xbit：座標リスト
・padding        ：8xbit：32ビットの整数倍にするための詰め物（別に無くてもいいけど、やってみたかっただけ）





0x12：INSTRUCT_GAME_START

"INSTRUCT_GAME_START"は、ゲームに参加する全てのクライアントに対してゲームの開始命令を行うサーバ通信です。

@フォーマット
0                                                                             31
+----------+--------------------------+------------------------------+--------+
| type (8) | first_turn_player_id (8) | other_player_name_length (8) |        |
+----------+--------------------------+------------------------------+        +
:                            other_player_name (8x)                           :
:                                                          +------------------+
:                                                          |   padding (8x)   |
+----------------------------------------------------------+------------------+

・type                    ：8bit ：通信タイプ
・first_turn_player_id    ：8bit ：先攻となるプレイヤーのID。1から始まる
・other_player_name_length：8bit ：相手プレイヤーの名前のバイト長
・other_player_name       ：8xbit：相手プレイヤーの名前。xバイトの可変長
・padding                 ：8xbit：32ビットの整数倍にするための詰め物


 


0x13：INSTRUCT_PIECE_PICKING

"INSTRUCT_PIECE_PICKING"は、正常な"REQUEST_COORDINATE_LIST"によって指定された駒を手札または盤上から取り除くよう、
ゲームに参加する全てのクライアントに対して命令を行うサーバ通信です。

@フォーマット
0                                                                             31
+------------+---------------------+------------------------+-----------------+
|  type (8)  |  hand_piece_id (8)  |  exposed_piece_id (8)  |  coordinate (8) |   
+------------+---------------------+------------------------+-----------------+

・type            ：8bit：通信タイプ
・hand_piece_id   ：8bit：手札の駒を取り除く場合はその駒のID、そうでない場合は0xffが入ります
・exposed_piece_id：8bit：手札の駒を取り除く場合は0xffが入り、盤上から駒を取り除く場合かつ駒を取り除いた下に他の駒がある場合はその駒のIDが入ります。空マスとなる場合は0xffが入ります。
・coordinate      ：8bit：手札の駒を取り除く場合は0xffが入り、盤上から駒を取り除く場合は取り除き元となる座標を指定します。また同時に"exposed_piece_id"で指定される駒を新しく配置する座標でもあります





0x14：INSTRUCT_PIECE_PLACEMENT

"INSTRUCT_PIECE_PLACEMENT"は、正常な"REQUEST_PIECE_PLACEMENT"によって指定された駒を指定された座標に配置するよう、
ゲームに参加する全てのクライアントに対して命令を行うサーバ通信です。

@フォーマット
0                                                                             31
+------------+------------------+-----------------------+---------------------+
|  type (8)  |   piece_id (8)   |   coordinate_to (8)   |     padding (8)     |
+------------+------------------+-----------------------+---------------------+

・type         ：8bit：通信タイプ
・piece_id     ：8bit：駒ID
・coordinate_to：8bit：駒を配置する先の座標を指定します
・padding      ：8bit：32ビットの整数倍にするための詰め物




0x15：INSTRUCT_GAME_END

"INSTRUCT_GAME_END"は、ゲームに参加する全てのクライアントに対してゲームの終了命令を行うサーバ通信です。

@フォーマット
0                                                                             31
+------------+-----------------+----------------------------------------------+
|  type (8)  |   end_type (8)  |                  padding (16)                |
+------------+-----------------+----------------------------------------------+

・type      ：8bit ：通信タイプ
・end_type  ：8bit ：終了タイプ
・padding   ：16bit：32ビットの整数倍にするための詰め物

end_type
・0x00：WIN_END  ：宛先クライアント側のプレイヤーの勝ちで終了
・0x01：LOSE_END ：宛先クライアント側のプレイヤーの負けで終了
・0x02：ERROR_END：エラーにより終了（ERROR_SERVERによってエラーが通知されます）



0x16：ERROR_GAME 

"ERROR_GAME"は、クライアントからの送信データがゲーム状況からして不正であると判断できるため、ターンの最初からやり直しを求めるエラー通知をクライアントへ行うサーバ通信です。

@フォーマット
0                                                                             31
+------------+------------------+---------------------------------------------+
|  type (8)  |  error_type (8)  |                 padding (16)                |
+------------+------------------+---------------------------------------------+

・type      ：8bit ：通信タイプ
・error_type：8bit ：発生したエラーのタイプ
・padding   ：16bit：32ビットの整数倍にするための詰め物（別に無くてもいいけど、やってみたかっただけ）

@許可されるエラータイプ
・NON_EXISTENT_PIECE_ID
・NO_COORDINATES_TO_SELECT
・PIECE_CANNOT_PLACE





・0x17：ERROR_SERVER

"ERROR_SERVER"は、サーバ側で発生したエラーについてクライアントへ通知を行うサーバ通信です。直後に"end_type"が"ERROR_END"のINSTRUCT_GAME_ENDが送信されます。

@フォーマット
0                                                                             31
+------------+------------------+---------------------------------------------+
|  type (8)  |  error_type (8)  |                 padding (16)                |
+------------+------------------+---------------------------------------------+

・type      ：8bit ：通信タイプ
・error_type：8bit ：発生したエラーのタイプ
・padding   ：16bit：32ビットの整数倍にするための詰め物（別に無くてもいいけど、やってみたかっただけ）

@許可されるエラータイプ
・UNKNOWN_ERROR_SERVER
・OTHER_CLIENT_DISCONNECTED




< エラータイプ >

0x0-
[クライアントエラー]
・0x00：UNKNOWN_ERROR_CLIENT           ：クライアントからの原因不明のエラー
・0x01：CLIENT_DISCONNECTED            ：接続切断エラー

0x1-
[サーバエラー]
・0x10：UNKNOWN_ERROR_SERVER           ：サーバからの原因不明のエラー
・0x11：OTHER_CLIENT_HAS_UNKNOWN_ERROR ：他クライアントに原因不明のエラーが発生したことを通知するエラー
・0x12：OTHER_CLIENT_DISCONNECTED      ：他クライアントの接続切断通知エラー

0x2- 
[ゲームエラー]
・0x20：NON_EXISTENT_PIECE_ID          ：存在しない駒IDを受け取りました
・0x21：NON_EXISTENT_COORDINATE        ：存在しない座標を受け取りました
・0x22：PIECE_NOT_IN_YOUR_HAND         ：手札に指定された駒がありません
・0x23：NO_YOUR_PIECES_TO_SELECT       ：指定された座標から選択できる駒がありません
・0x24：NO_COORDINATES_TO_SELECT       ：駒を配置できる座標が盤上にありません
・0x25：CANNOT_PLACE_PIECE             ：指定された座標に指定された駒を配置できません





< サーバステート >

・0x00：SLEEPING                        ：非稼働状態
・0x01：INITIALIZING_GAME               ：ゲーム初期化中
・0x02：WAITING_PIECE_SELECTION         ：コマ選択待ち
・0x03：WAITING_PIECE_PLACEMENT         ：コマ配置待ち
・0x04：RESULT                          ：決着後



0x00：SLEEPING

"SLEEPING"は、サーバが作成されているものの、起動していない状態です。

@許可される通信
なし

@遷移先ステートと遷移条件
・サーバが起動される -> INITIALIZING_GAME





0x01：INITIALIZING_GAME

"INITIALIZING_GAME"は、ゲームが起動してから"INSTRUCT_GAME_START"通信によってゲームが開始されるまでの状態です。
この状態では、クライアントからのゲーム参加要求を待ち受けたのち（いわゆるマッチング）、ゲームの初期化が行われます。
したがって、クライアントからのゲーム入力通信は受け付けられません。

@許可される通信
・REQUEST_PARTICIPATION_APPROVAL
・RESPONSE_PARTICIPATION_APPROVAL
・INSTRUCT_GAME_START
・ERROR_CLIENT
・ERROR_SERVER

@遷移先ステートと遷移条件
・サーバから"INSTRUCT_GAME_START"通信が行われる -> WAITING_PIECE_SELECTION
・サーバがシャットダウンされる -> SLEEPING
・ゲームが中止される -> RESULT





0x02：WAITING_PIECE_SELECTION

"WAITING_PIECE_SELECTION"は、ターンを獲得しているクライアントがコマを選択するのを、サーバが待ち受けている状態です。
すなわち、クライアントからの"REQUEST_COORDINATE_LIST"通信を待ち受けています。

@許可される通信
・REQUEST_COORDINATE_LIST
・RESPONSE_COORDINATE_LIST
・INSTRUCT_PIECE_PICKING
・INSTRUCT_GAME_END
・ERROR_CLIENT
・ERROR_GAME
・ERROR_SERVER

@遷移先ステートと遷移条件
・サーバから"RESPONSE_COORDINATE_LIST"通信が行われる -> WAITING_PIECE_PLACEMENT
・クライアントが配置不可能なコマを選択する -> WAITING_PIECE_SELECTION
・サーバがシャットダウンされる -> SLEEPING
・ゲームが中止される -> RESULT





0x03：WAITING_PIECE_PLACEMENT

"WAITING_PIECE_PLACEMENT"は、ターンを獲得しているクライアントがコマを配置する座標を選択するのを、サーバが待ち受けている状態です。
すなわち、クライアントからの"REQUEST_PIECE_PLACEMENT"通信を待ち受けています。

@許可される通信
・REQUEST_PIECE_PLACEMENT
・INSTRUCT_PIECE_PLACEMENT
・INSTRUCT_GAME_END
・ERROR_CLIENT
・ERROR_GAME
・ERROR_SERVER

@遷移先ステートと遷移条件
・サーバから"INSTRUCT_PIECE_PLACEMENT"通信が行われる -> （ターン切替ののち）WAITING_PIECE_SELECTION
・サーバから"INSTRUCT_GAME_END"通信が行われる -> RESULT
・クライアントから配置不可能な座標へのコマを配置要求が行われる -> WAITING_PIECE_PLACEMENT
・サーバがシャットダウンされる -> SLEEPING
・ゲームが中止される -> RESULT





0x04：RESULT 

"RESULT"は、ゲームが終了し結果が確定している状態です。
ゲームは決着によって終了する場合と、ゲームの継続が困難となった際にエラーによって中止される場合があります。

@許可される通信
なし

@遷移先ステートと遷移条件
・サーバが再初期化される -> INITIALIZING_GAME
・サーバがシャットダウンされる -> SLEEPING




※状態遷移図


        +----------------+
        |                |
        |    SLEEPING    |<-----------------------------+
        |                |                              |
        +----------------+                              |
              |                                         |
              V                                         |
        +--------------------------+                    |
        |                          |                    |
+-------|    INITIALIZING_GAME     |--------------------+
|       |                          |                    |
|       +--------------------------+                    |
|             |                      +-----+            |
|             V                      V     |            |
|       +-------------------------------+  |            |
|       |                               |--+            |
+-------|    WAITING_PIECE_SELECTION    |---------------+
|       |                               |<------+       |
|       +-------------------------------+       |       |
|             |                      +-----+    |       |
|             V                      V     |    |       |
|       +-------------------------------+  |    |       |
|       |                               |--+    |       |  
+-------|    WAITING_PIECE_PLACEMENT    |-------+       |
|       |                               |---------------+
|       +-------------------------------+               |
|             |                                         |
|             V                                         |
|       +--------------+                                |
|       |              |                                |
+------>|    RESULT    |--------------------------------+
        |              |
        +--------------+







< 通信シーケンス >


